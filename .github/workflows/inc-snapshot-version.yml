name: "Increase Snapshot Version"

on:
  workflow_dispatch:
    inputs:
      verbose:
        description: "If to output a summary."
        required: false
        type: boolean
        default: true
      dryRun:
        description: "If to perform a dryRun without push at the end."
        required: false
        type: boolean
        default: true
  workflow_call:
    inputs:
      verbose:
        description: "If to output a summary."
        required: false
        type: boolean
        default: false
      dryRun:
        description: "If to perform a dryRun without push at the end."
        required: false
        type: boolean
        default: false
    outputs:
      version:
        description: "Snapshot version"
        value: ${{ jobs.main.outputs.version }}

run-name: |
  ${{ github.workflow }} (dry-run: ${{ inputs.dryRun }}, verbose: ${{ inputs.verbose }})

env:
  # https://github.com/actions/runner-images/issues/70
  NODE_OPTIONS: "--max_old_space_size=4096"
  USER_NAME: ${{ github.actor }}
  USER_MAIL: "${{ github.actor }}@users.noreply.github.com"

permissions:
  contents: write

jobs:
  echo-inputs:
    name: "Echo Inputs"
    runs-on: ubuntu-latest
    steps:
      - id: echo
        name: "Echo Inputs"
        run: |
          echo "dryRun=${{ inputs.dryRun }}"
          echo "verbose=${{ inputs.verbose }}"
  about:
    name: "About"
    uses: "./.github/workflows/about.yml"
  main:
    name: "Main"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      - about
    env:
      nodeVersion: ${{ needs.about.outputs.nodeVersion }}
      pnpmVersion: ${{ needs.about.outputs.pnpmVersion }}
    outputs:
      version: ${{ steps.inc-snapshot-version.outputs.result }}
    steps:
      - id: checkout
        name: "Checkout"
        uses: actions/checkout@v4
      - id: git-pull
        name: "Pull Changes"
        run: |
          git pull
      - id: installPnpm
        name: "Install: Use PNPM ${{ env.pnpmVersion }}"
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.pnpmVersion }}
          run_install: false
      - id: installNodeJs
        name: "Install: Use Node.js ${{ env.nodeVersion }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.nodeVersion }}
          cache: "pnpm"
      - id: install
        name: "Install"
        run: |
          pnpm install --frozen-lockfile
      - id: config
        name: "Git Config"
        run: |
          git config --global user.name "${{ env.USER_NAME }}"
          git config --global user.email "${{ env.USER_MAIL }}"
          echo "Done configuring Git: user.name and user.email."
      - id: inc-snapshot-version
        name: "Increment Snapshot Version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          snapshotType="prerelease"
          snapshotVersion="$(pnpm version --silent "${snapshotType}" --no-git-tag-version)"
          git commit -am "chore: next snapshot version: ${snapshotVersion}"
          echo "Next Snapshot Version: ${snapshotVersion}"
          echo "result=${snapshotVersion}" >> $GITHUB_OUTPUT
      - id: git-push
        if: ${{ !inputs.dryRun }}
        name: "Push Changes"
        run: |
          git push
      - id: git-push-dry-run
        if: ${{ inputs.dryRun }}
        name: "Push Changes (Dry Run)"
        run: |
          git push --dry-run
      - id: debug-on-failure
        name: "Debug on Failure"
        if: failure()
        run: |
          echo "Debugging on failure..."
          git status
          git log --oneline -n 10
          git diff @{push}
  verbose:
    name: "Verbose"
    runs-on: ubuntu-latest
    needs: main
    if: ${{ inputs.verbose }}
    steps:
      - id: output
        name: "Output"
        run: |
          echo "# ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "## Parameters" >> $GITHUB_STEP_SUMMARY
          echo "* Verbose: ${{ inputs.verbose }}" >> $GITHUB_STEP_SUMMARY
          echo "* Dry-Run: ${{ inputs.dryRun }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Result" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* Snapshot Version: ${{ needs.main.outputs.version }}" >> $GITHUB_STEP_SUMMARY
