name: "Version"

on:
  workflow_dispatch:
    inputs:
      verbose:
        description: "If to output a summary."
        required: false
        type: boolean
        default: true
      release_type:
        description: 'Release type.'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
      snapshot:
        description: "If to output next snapshot version."
        required: false
        type: boolean
        default: false
  workflow_call:
    inputs:
      verbose:
        description: "If to output a summary."
        required: false
        type: boolean
        default: false
      release_type:
        description: 'Release type.'
        required: true
        default: 'patch'
        type: string
      snapshot:
        description: "If to output next snapshot version."
        required: false
        type: boolean
        default: false
    outputs:
      version:
        description: "Determined version"
        value: ${{ jobs.main.outputs.version }}

run-name: |
  ${{ github.workflow }} (release type: ${{ github.event.inputs.release_type }}, snapshot? ${{ github.event.inputs.snapshot }}, verbose: ${{ github.event.inputs.verbose }})

env:
  # https://github.com/actions/runner-images/issues/70
  NODE_OPTIONS: "--max_old_space_size=4096"
  nodeVersion: 20
  pnpmVersion: 8

permissions: { }

jobs:
  about:
    name: "About"
    uses: "./.github/workflows/about.yml"
  main:
    name: "Main"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      version: ${{ steps.get-version.outputs.result }}
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            scripts
      - id: installPnpm
        name: "Install: Use PNPM ${{ env.pnpmVersion }}"
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.pnpmVersion }}
          run_install: false
      - id: installNodeJs
        name: "Install: Use Node.js ${{ env.nodeVersion }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.nodeVersion }}
          cache: "pnpm"
      - id: install
        name: Install
        run: |
          pnpm install --frozen-lockfile
      - id: get-version
        name: "Get Version"
        run: |
          result=""
          if [ ${{ inputs.snapshot }} = true ]; then
            result=$(pnpm --silent get-version --snapshot ${{ inputs.release_type }})
          else
            result=$(pnpm --silent get-version ${{ inputs.release_type }})
          fi
          echo "result=${result}" >> $GITHUB_OUTPUT
  verbose:
    name: "Verbose"
    runs-on: ubuntu-latest
    needs: main
    if: ${{ github.event.inputs.verbose }}
    steps:
      - id: output
        name: "Output"
        run: |
          echo "# Version" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "* Snapshot? ${{ inputs.snapshot }}" >> $GITHUB_STEP_SUMMARY
          echo "* Release Type: ${{ inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
          echo "* Next Version: ${{ needs.main.outputs.version }}" >> $GITHUB_STEP_SUMMARY
